name: Deploy to Hostinger

on:
  push:
    branches:
      - development
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      NODE_VERSION: "20"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for merge and tag history

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          VITE_API_BASE_URL: ${{ github.ref_name == 'development' && 'https://taameerv2staging.gethorcrm.com/' || 'https://taameerv2.gethorcrm.com/' }}
        run: npm run build

      # ðŸ”¹ Deploy Staging (development branch)
      - name: Deploy via FTP to Hostinger (Development)
        if: github.ref_name == 'development'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.DEV_FTP_SERVER }}
          username: ${{ secrets.DEV_FTP_USERNAME }}
          password: ${{ secrets.DEV_FTP_PASSWORD }}
          protocol: ftps
          server-dir: ${{ secrets.DEV_FTP_DIR }}
          local-dir: ./dist/
          dangerous-clean-slate: true

      # ðŸ”¹ Deploy Production (production branch)
      - name: Deploy via FTP to Hostinger (Production)
        if: github.ref_name == 'production'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.PROD_FTP_SERVER }}
          username: ${{ secrets.PROD_FTP_USERNAME }}
          password: ${{ secrets.PROD_FTP_PASSWORD }}
          protocol: ftps
          server-dir: ${{ secrets.PROD_FTP_DIR }}
          local-dir: ./dist/
          dangerous-clean-slate: true

      # ðŸ”¹ Merge production â†’ main after deploy
      - name: Merge production into main
        if: github.ref_name == 'production'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout main
          git merge production --no-ff --commit -m "Merge production into main [skip ci]"
          git push origin main

      # ðŸ”¹ Auto-bump version & tag (semantic)
      - name: Bump version and create tag
        if: github.ref_name == 'production'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: production
          default_bump: patch
          tag_prefix: v
          create_annotated_tag: true

      # ðŸ”¹ Create GitHub Release with notes
      - name: Create GitHub Release
        if: github.ref_name == 'production'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          generate_release_notes: true
